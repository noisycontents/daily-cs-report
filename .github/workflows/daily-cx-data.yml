name: Daily CX Stats Collection (SM & DOK)

# 매일 한국시간 오전 8:00 (UTC 23:00) 자동 실행
on:
  schedule:
    - cron: '0 23 * * *'  # UTC 23:00 = KST 08:00
  workflow_dispatch:  # 수동 실행도 가능

jobs:
  collect-daily-stats:
    runs-on: ubuntu-latest
    
    steps:
      - name: 🛎️ 코드 체크아웃
        uses: actions/checkout@v4
        
      - name: 🟢 Node.js 설정
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: 🧹 완전한 환경 정리 및 의존성 설치
        run: |
          # npm 완전 정리
          npm cache clean --force
          rm -rf node_modules package-lock.json ~/.npm
          
          # Google 관련 환경변수 완전 제거
          unset GOOGLE_APPLICATION_CREDENTIALS
          unset GOOGLE_CLOUD_PROJECT
          unset GCLOUD_PROJECT
          unset GOOGLE_CLIENT_EMAIL
          unset GOOGLE_PRIVATE_KEY
          
          # 의존성 설치
          npm install
          
          # 설치된 패키지 확인
          echo "=== 설치된 패키지 목록 ==="
          ls node_modules/ | grep -i google || echo "Google 패키지 없음"
          
          # Google 라이브러리 강제 제거
          echo "=== Google 라이브러리 강제 제거 ==="
          rm -rf node_modules/google-auth-library
          rm -rf node_modules/google-gax
          rm -rf node_modules/@google-analytics
          rm -rf node_modules/@google-cloud
          rm -rf node_modules/googleapis
          find node_modules -name "*google*" -type d -exec rm -rf {} + 2>/dev/null || true
          
          # 최종 확인
          echo "=== 최종 Google 패키지 확인 ==="
          find node_modules -name "*google*" -type d || echo "✅ Google 패키지 완전 제거"
        
      - name: 🚀 Daily CX Stats 수집 실행 (SM & DOK)
        env:
          # SM-CX WordPress OAuth2 설정
          WP_BASE_URL: ${{ secrets.WP_BASE_URL }}
          WP_CLIENT_ID: ${{ secrets.WP_CLIENT_ID }}
          WP_CLIENT_SECRET: ${{ secrets.WP_CLIENT_SECRET }}
          
          # DOK-CX WordPress OAuth2 설정
          DOK_WP_BASE_URL: ${{ secrets.DOK_WP_BASE_URL }}
          DOK_WP_CLIENT_ID: ${{ secrets.DOK_WP_CLIENT_ID }}
          DOK_WP_CLIENT_SECRET: ${{ secrets.DOK_WP_CLIENT_SECRET }}
          
          # SM-CX Google Analytics 4 설정
          GA4_PROPERTY_ID: ${{ secrets.GA4_PROPERTY_ID }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_REFRESH_TOKEN: ${{ secrets.GOOGLE_REFRESH_TOKEN }}
          
          # DOK-CX Google Analytics 4 설정
          DOK_GA4_PROPERTY_ID: ${{ secrets.DOK_GA4_PROPERTY_ID }}
          
          # Supabase 설정 (공통)
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
          # ADC(기본 자격증명) 비활성화를 위한 안전장치
          GOOGLE_APPLICATION_CREDENTIALS: ""
          GOOGLE_CLOUD_PROJECT: ""
          GCLOUD_PROJECT: ""
          # Node.js Google 라이브러리 비활성화
          GOOGLE_AUTH_DISABLE_SSL: "true"
        run: |
          # 실행 전 Google 라이브러리 재확인 및 제거
          echo "=== 실행 전 Google 라이브러리 재제거 ==="
          rm -rf node_modules/google-auth-library node_modules/google-gax node_modules/@google-* node_modules/googleapis 2>/dev/null || true
          find node_modules -name "*google*" -type d -exec rm -rf {} + 2>/dev/null || true
          
          echo "🚀 Daily CX Stats 수집 시작 ($(date '+%Y-%m-%d %H:%M:%S %Z'))"
          echo "📅 KST 기준 현재 시간: $(TZ=Asia/Seoul date '+%Y-%m-%d %H:%M:%S %Z')"
          
          echo ""
          echo "=== 🏢 SM-CX 데이터 수집 시작 ==="
          node scripts/fetch-and-push.js
          SM_EXIT_CODE=$?
          
          echo ""
          echo "=== 🇩🇪 DOK-CX 데이터 수집 시작 ==="
          node scripts/fetch-and-push-dok.js
          DOK_EXIT_CODE=$?
          
          echo ""
          echo "=== 📊 수집 결과 요약 ==="
          if [ $SM_EXIT_CODE -eq 0 ]; then
            echo "✅ SM-CX: 성공"
          else
            echo "❌ SM-CX: 실패 (Exit Code: $SM_EXIT_CODE)"
          fi
          
          if [ $DOK_EXIT_CODE -eq 0 ]; then
            echo "✅ DOK-CX: 성공"
          else
            echo "❌ DOK-CX: 실패 (Exit Code: $DOK_EXIT_CODE)"
          fi
          
          echo "✅ Daily CX Stats 수집 완료 ($(date '+%Y-%m-%d %H:%M:%S %Z'))"
          
          # 적어도 하나는 성공해야 함
          if [ $SM_EXIT_CODE -ne 0 ] && [ $DOK_EXIT_CODE -ne 0 ]; then
            echo "❌ 모든 브랜드 데이터 수집 실패"
            exit 1
          fi
          
      - name: 📝 워크플로우 완료
        if: always()  # 성공/실패 관계없이 실행
        run: |
          echo "📊 Daily CX Stats Collection 워크플로우 완료"
          echo "📅 완료 시간: $(TZ=Asia/Seoul date '+%Y-%m-%d %H:%M:%S %Z')" 
